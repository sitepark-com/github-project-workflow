name: Maven Deploy Snapshot

on:
  workflow_call:
    secrets:
      MVN_REPO_SERVERS:
        required: true
      MVN_REPO_SERVER_USERNAME:
        required: true
      MVN_REPO_SERVER_PASSWORD:
        required: true
      MVN_REPO_SERVER_ID:
        required: true
      MVN_REPO_SERVER_SNAPSHOT_URL:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, 'ci(release):')"

    steps:
      - uses: actions/checkout@v3

      - name: Get project-version from pom.xml
        id: project-version
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: 'pom.xml'
          xpath: '//*[local-name()="project"]/*[local-name()="version"]'

      - name: Check if snapshot
        if: "endsWith(steps.get-project-version.outputs.info, '-SNAPSHOT') == false"
        run: |
            echo "Not a snapshot-version: ${{ steps.get-project-version.outputs.info }}"
            exit 1

      - name: Get java-version from pom.xml
        id: get-java-version
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: 'pom.xml'
          xpath: '//*[local-name()="maven.compiler.release"]'

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ steps.get-java-version.outputs.info }}
          distribution: 'adopt'
          cache: 'maven'
          server-id: ${{ secrets.MVN_REPO_SERVER_ID }}
          server-username: ${{ secrets.MVN_REPO_SERVER_USERNAME }}
          server-password: ${{ secrets.MVN_REPO_SERVER_PASSWORD }}

      - name: Build and deploy with Maven
        run: mvn -DaltDeploymentRepository=${{ secrets.MVN_REPO_SERVER_ID }}::default::${{ secrets.MVN_REPO_SERVER_SNAPSHOT_URL }} --batch-mode deploy



